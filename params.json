{"name":"Prefab","tagline":"Pixel-Based Reverse Engineering of Graphical Interfaces","body":"### Welcome to Prefab.\r\nPrefab is a system for reverse engineering the structure of graphical interfaces from their pixels. In other words, Prefab looks at the pixels of an existing interface and returns a tree structure, like a web-page's document object model, that you can then use to modify the original interface in some way. Prefab works from example images of widgets; it decomposes those widgets into small parts, and exactly matches those parts in screenshots of an interface. Prefab does this many times per second to help you modify interfaces in real time. Imagine if you could modify any graphical interface? With Prefab, you can explore this question!\r\n\r\n###\r\nPrefab helps you implement your ideas in the _real world_. It provides tools for reverse engineering the appearance of widgets and interpreting the semantics about interfaces. Prefab is written in C# and runs on windows, but it can reverse engineer interfaces from any OS. Check out our [videos](# Videos) where Prefab interprets the pixels of a remote desktop application to reverse engineer Mac OS X interfaces.\r\n\r\nThe [demonstration videos](# Videos) provide numerous examples of the types of applications that can be built with the Prefab toolkit.\r\n\r\n\r\n### Getting Started\r\nPrefab's GitHub repositories are located at (htttps://github.com/prefab). Start by checking out the [interpretation](https://github.com/prefab/interpretation)\r\n### Videos\r\n\r\n### Authors and Contributors\r\nPrefab is a research project created in the [Department of Computer Science and Engineering](cs.washington.edu) at the [University of Washington](washington.edu) by [Morgan Dixon] (http://morgandixon.net) (@morgandixon) and [James Fogarty](http://homes.cs.washington.edu/~jfogarty/) (@jayfo). Please see our [Prefab publications] (# Publications) for a complete list of research papers describing Prefab.\r\n\r\n### Support or Contact\r\nHaving trouble with Prefab? Checkout the documentation at [https://github.com/prefab/interpretation/wiki](https://github.com/prefab/interpretation/wiki)\r\n \r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}